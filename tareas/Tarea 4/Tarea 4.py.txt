Cuando el intérprete de Python lee un archivo de código fuente, se ejecuta todo el código que se encuentran en ella. Antes de ejecutar el código, se definen unas variables especiales. Por ejemplo, si el intérprete de python está ejecutando en ese módulo (el archivo de origen) como en el programa principal, se establece el especial __name__ variable tenga un valor "__main__". Si este archivo se importa de otro módulo, __name__ establecerá con el nombre del módulo.

En el caso de la secuencia de comandos, vamos a suponer que se está ejecutando como función principal, por ejemplo. usted dijo algo como
python threading_example.py
en la línea de comandos. Después de configurar las variables especiales, se ejecutarán import instrucción y la carga de los módulos. Será, entonces, evaluar la def bloque, la creación de un objeto de la función y la creación de una variable myfunction que señala el objeto de la función. Luego de leer la if instrucción y ver que __name__ igual "__main__", por lo que se ejecutará el bloque que allí se muestra.

Una de las razones para esto es que a veces escribes un módulo ( .py archivo) donde se puede ejecutar directamente. Alternativamente, también puede ser importado y utilizado en otro módulo. Haciendo el principal cheque, puede hacer que el código sólo se ejecutan cuando se desea ejecutar el módulo como un programa y no tener que ejecutar cuando alguien quiere importar su módulo y llamar a sus funciones propias.
